---
name: "Create Release"

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

jobs:
  update_pxt-json:
    name: "Update the pxt.json file list"
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 2

      - name: Diff file list
        id: md_diff
        run: >
          DIFF_RESULT="$( diff -q
          <(jq -r '.files[] | select(. | match(".md"))' pxt.json | sort)
          <(find .  -name '*.md' | sed 's_^./__' | sort)
          | wc -l )";
          echo "diff_result=$DIFF_RESULT" >> "$GITHUB_OUTPUT";

      - name: Update pxt.json file list
        id: pxtjson_patch
        if: ${{ steps.md_diff.outputs.diff_files == 1 }}
        run: |
          SYNC_FILES=`find . -name '*.md' | sort | sed -e 's_^./\(.*\)_"\1"_' | paste -sd ',' -`
          UPDATED_JSON=`jq ".files |= [$SYNC_FILES]" pxt.json`
          echo $UPDATED_JSON | jq '.' > pxt.json

      - name: Bump version
        id: pxtjson_bump
        env:
          DIFF_RESULT: ${{ steps.md_diff.outputs.diff_result }}
        run: |
          SEM_VER=(`jq -r '.version' pxt.json | sed 's/\./ /g'`)
          if [[ $DIFF_RESULT == 1 ]]; then (( SEM_VER[1]+=1 )); SEM_VER[2]=0; else (( SEM_VER[2]+=1 )); fi
          VER_STRING=\"`echo ${SEM_VER[@]} | sed 's/ /./g'`\"
          UPDATED_JSON=`jq ".version |= $VER_STRING" pxt.json`
          echo "ver_string=v${VER_STRING//\"}" >> "$GITHUB_OUTPUT"
          echo $UPDATED_JSON | jq '.' > pxt.json

      - name: Get last commit message
      # copied from stefanweifel/git-auto-commit-action README
        id: last-commit
        run: |
          echo "message=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=\"%an <%ae>\")" >> $GITHUB_OUTPUT

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_author: ${{ steps.last-commit.outputs.author }}
          commit_message: ${{ steps.last-commit.outputs.message }}
          commit_options: '--amend --no-edit'
          push_options: '--force'
          skip_fetch: true

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.pxtjson_bump.outputs.ver_string }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag}"
